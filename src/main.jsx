// src/main.jsx (NOUVEAU CODE √Ä COLLER)

import React from 'react';
import ReactDOM from 'react-dom/client';
import App from './App.jsx';
import './index.css';
import 'leaflet/dist/leaflet.css'; // Votre importation pour Leaflet est conserv√©e

// --- D√âBUT : LOGS DE D√âBOGAGE GLOBAUX ---
// Ce bloc est ajout√© pour attraper les erreurs qui pourraient causer un √©cran blanc.
console.log("üöÄ [main.jsx] Le script est en cours d'ex√©cution.");

// Cet √©couteur attrape TOUTES les erreurs non captur√©es dans le code.
// C'est le plus susceptible d'attraper l'erreur qui cause l'√©cran blanc.
window.onerror = function (message, source, lineno, colno, error) {
  console.error("üí• ERREUR GLOBALE NON CAPTUR√âE:", {
    message,
    source,
    lineno,
    colno,
    errorObject: error
  });
  // Affiche un message d'erreur simple directement dans la page pour l'utilisateur
  document.body.innerHTML = '<div style="padding: 20px; font-family: sans-serif; text-align: center;"><h1>Une erreur critique est survenue.</h1><p>Veuillez rafra√Æchir la page ou contacter le support.</p></div>';
  return true; // Emp√™che le comportement par d√©faut (qui est d'afficher l'erreur dans la console)
};

// Cet √©couteur attrape les rejets de promesses non g√©r√©s (ex: un appel API qui √©choue sans .catch())
window.onunhandledrejection = function(event) {
  console.error("üö´ REJET DE PROMESSE NON G√âR√â:", event.reason);
};
// --- FIN : LOGS DE D√âBOGAGE GLOBAUX ---

// Le `try...catch` autour du rendu initial de React est une s√©curit√© suppl√©mentaire.
try {
  console.log("‚è≥ [main.jsx] Tentative de rendu de l'application React...");
  ReactDOM.createRoot(document.getElementById('root')).render(
    <React.StrictMode>
      <App />
    </React.StrictMode>,
  );
  console.log("‚úÖ [main.jsx] Rendu de l'application React r√©ussi !");
} catch (error) {
  console.error("üî• [main.jsx] ERREUR CRITIQUE PENDANT LE RENDU INITIAL DE REACT:", error);
  // Affiche une erreur directement dans le DOM si React lui-m√™me √©choue √† se monter
  const rootDiv = document.getElementById('root');
  if (rootDiv) {
    rootDiv.innerHTML = `<div style="padding: 20px; font-family: sans-serif; text-align: center;"><h1>Erreur critique au d√©marrage de React.</h1><p>Consultez la console pour les d√©tails.</p><pre>${error.stack}</pre></div>`;
  }
}