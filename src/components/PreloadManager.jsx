// src/components/PreloadManager.jsx

import { useEffect } from 'react';
import { useLocation } from 'react-router-dom';

// Importez les fonctions "lazy" directement depuis App.jsx ou recr√©ez-les ici
// Pour la simplicit√©, on peut les recr√©er ici.
const lazyRoutes = [
  () => import('../pages/public/SearchPage.jsx'),
  () => import('../pages/public/ContactPage.jsx'),
  () => import('../pages/public/PublicColisTrackingPage.jsx'),
  () => import('../pages/auth/LoginPage.jsx'),
  () => import('../pages/auth/RegisterPage.jsx'),
  // Ajoutez d'autres routes importantes que vous voulez pr√©-charger
  () => import('../pages/public/ClientDashboardPage.jsx'),
  () => import('../pages/admin/DashboardPage.jsx'),
];

const PreloadManager = () => {
  const location = useLocation();

  useEffect(() => {
    // On attend un peu que la page principale soit stable
    const timer = setTimeout(() => {
      console.log("üöÄ [PreloadManager] D√©but du pr√©-chargement des routes en arri√®re-plan...");
      // On boucle sur nos fonctions "lazy" et on les appelle, ce qui d√©clenche le t√©l√©chargement.
      lazyRoutes.forEach(preloadFunc => {
        preloadFunc();
      });
    }, 2500); // On attend 2.5 secondes avant de commencer le pr√©-chargement

    return () => clearTimeout(timer); // Nettoyage au cas o√π le composant est d√©mont√©
  }, [location.pathname]); // On pourrait relancer si la route change, mais une seule fois suffit souvent.

  return null; // Ce composant n'affiche rien
};

export default PreloadManager;